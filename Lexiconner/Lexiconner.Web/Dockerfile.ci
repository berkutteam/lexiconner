#!!!this dockerfile is changed manually
FROM microsoft/dotnet:2.2-aspnetcore-runtime AS base
WORKDIR /app
#heroku:
#fails on 80
#The web process must listen for HTTP traffic on $PORT, which is set by Heroku. EXPOSE in Dockerfile is not respected, but can be used for local testing. Only HTTP requests are supported.
#EXPOSE 8080
#ENV ASPNETCORE_URLS=http://*:8080
#ENV ASPNETCORE_URLS=http://*:$PORT

FROM microsoft/dotnet:2.2-sdk AS build
WORKDIR /src
COPY ["Lexiconner/Lexiconner.Web/Lexiconner.Web.csproj", "Lexiconner.Web/"]
COPY ["Lexiconner/Lexiconner.Application/Lexiconner.Application.csproj", "Lexiconner.Application/"]
RUN dotnet restore "Lexiconner.Web/Lexiconner.Web.csproj"
#WORKDIR "/src/Lexiconner.Web"
#COPY "Lexiconner/Lexiconner.Web/" .
COPY "Lexiconner/"  .
WORKDIR "/src/Lexiconner.Web"
RUN dotnet build "Lexiconner.Web.csproj" -c Release -o /app

FROM build AS publish
RUN dotnet publish "Lexiconner.Web.csproj" -c Release -o /app

FROM base AS final
WORKDIR /app
COPY --from=publish /app .
#ENTRYPOINT ["dotnet", "Lexiconner.Web.dll"]
#Because Heroku doesn’t work nicely with ENTRYPOINT command we should change this
CMD dotnet Lexiconner.Web.dll