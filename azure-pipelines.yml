# Docker image
# Build a Docker image to deploy, run, or push to a container registry.
# Add steps that use Docker Compose, tag images, push to a registry, run an image, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  imageName1: 'lexiconner/api:$(build.buildId)'
  imageName2: 'lexiconner/identity:$(build.buildId)'
  imageName3: 'lexiconner/web:$(build.buildId)'

  
steps:
  # # use this only if specific version is required as it slows down deployment
  # - task: NodeTool@0 
  #   inputs:
  #     versionSpec: '8.x'

# - script: |
#     docker build -f Lexiconner/Lexiconner.Api/Dockerfile.ci -t $(imageName1) .
#     docker login --username=$(HEROKU_USERNAME) --password=$(HEROKU_API_KEY) registry.heroku.com
#     docker tag $(imageName1) registry.heroku.com/$(HEROKU_APP_NAME_API)/web
#     docker push registry.heroku.com/$HEROKU_APP_NAME_API/web           
#   displayName: 'docker build Api'
# - script: |
#     docker build -f Lexiconner/Lexiconner.IdentityServer4/Dockerfile.ci -t $(imageName2) .
#     docker login --username=$(HEROKU_USERNAME) --password=$(HEROKU_API_KEY) registry.heroku.com
#     docker tag $(imageName2) registry.heroku.com/$(HEROKU_APP_NAME_IDENTITY)/web
#     docker push registry.heroku.com/$HEROKU_APP_NAME_IDENTITY/web           
#   displayName: 'docker build Identity'
- script: |
    echo "#################### Building SPA projects... ####################"
    cd Lexiconner/Lexiconner.Web/vue-client
    npm install
    npm run build_DevelopmentHeroku
    echo "wwwroot files:"
    ls Lexiconner/Lexiconner.Web/wwwroot
  displayName: 'build SPA'
- script: |
    # build SPA
    #echo "#################### Building SPA projects... ####################"
    # use a sub-shell
    #(cd Lexiconner/Lexiconner.Web/vue-client ; npm install; npm run build_DevelopmentHeroku)
    printf "\n"

    echo "#################### Building project... ####################"
    docker build -f Lexiconner/Lexiconner.Web/Dockerfile.ci -t $(imageName3) .
    docker login --username=$(HEROKU_USERNAME) --password=$(HEROKU_API_KEY) registry.heroku.com
    docker tag $(imageName3) registry.heroku.com/$(HEROKU_APP_NAME_WEB)/web
    docker push registry.heroku.com/$HEROKU_APP_NAME_WEB/web
  displayName: 'docker build Web'
